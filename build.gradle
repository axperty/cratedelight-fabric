plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://maven.shedaniel.me/' }
	maven { url 'https://api.modrinth.com/maven' }
	maven { url 'https://maven.terraformersmc.com/' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "maven.modrinth:farmers-delight-fabric:${project.delight_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {

	}
}

loom {
	runs {
		datagenClient {
			inherit client
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=${project.modid}"

			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

var env = System.getenv()
var modLoader = name

var changelogFile = rootProject.file("changelog.md")
var changelogText = changelogFile.exists() ? changelogFile.text : ""

if (env.MODRINTH_TOKEN) {
	modrinth {
		projectId = modrinth_project_id
		versionName = "Crate Delight ${mod_version.split("-")[1]} - ${minecraft_version}"
		uploadFile = tasks.remapJar
		gameVersions = [minecraft_version]
		loaders = ["fabric"]
		changelog = changelogText
		versionNumber = mod_version
		versionType = "release"

		dependencies {
			required.project "fabric-api"
			required.project "farmers-delight-fabric"
			optional.project "more-delight"
			optional.project "storage-delight"
		}
	}
}

if (env.CURSEFORGE_TOKEN) {
	curseforge {
		apiKey = env.CURSEFORGE_TOKEN
		project {
			id = project_id
			changelog = changelogText
			changelogType = 'markdown'
			releaseType = 'release'
			addGameVersion minecraft_version
			addGameVersion "Fabric"

			mainArtifact(tasks.remapJar) {
				displayName = "Crate Delight ${mod_version.split("-")[1]} - ${minecraft_version}"
			}

			relations {
				requiredDependency "fabric-api"
				requiredDependency "farmers-delight-fabric"
				optionalDependency "more-delight-fabric"
				optionalDependency "storage-delight-fabric"
			}
		}
	}
}
